server:
  port: 8090

product:
  services:
    auth: http://localhost:9000
#  tokenType: oauth2
  tokenType: jwt
  defaultSchema: promoter1
  defaultShard: shard1

logging:
  level:
    org.springframework.security: info

spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
  application:
    name: rsw-product
  datasource:
    initialize: false
  jpa:
    properties:
      hibernate:
        max_fetch_depth: 5
        show_sql: true
        format_sql: true
        jdbc:
          fetch_size: 50
          batch_size: 50
  profiles:
#    active: github
#    active: rossoauth2
    active: rossjwt

security:
  basic:
    enabled: false
  sessions: stateless
  oauth2:
# oauth2 resource server filter order changed to -1 in Spring Boot 1.5; setting back to previous working order
    resource:
      filterOrder: 3

datasource:
  commonProperties:
    type: org.apache.tomcat.jdbc.pool.DataSource
    platform: postgres
    driverClassName: org.postgresql.Driver
    initialSize: 2
    maxActive: 2
    maxIdle: 2
    minIdle: 1
  hostMap:
    shard1:
      url: jdbc:postgresql://localhost:5432/rswdb?currentSchema=promoter1
      username: rsw_admin_user
      password: immv12#giver

promoter:
  schemaMap:
    promoter1:
      promoterId: 1
      promoterName: Master
      hostShardName: shard1
    promoter20:
      promoterId: 20
      promoterName: Promoter20
      hostShardName: shard1
    promoter21:
      promoterId: 21
      promoterName: Promoter21
      hostShardName: shard1


---
spring:
  profiles: github

# External Auth - github using oauth2 tokens
#  This clientId has an OAuth2 application authorization configured which expects the client to be localhost:8080
security:
  oauth2:
    client:
      clientId: 7f4d9a2a316f28a4e2f0
    resource:
      userInfoUri: https://api.github.com/user
      preferTokenInfo: false

---
spring:
  profiles: rossoauth2

# Internal Auth - ross using oauth2 tokens
security:
  oauth2:
    client:
      clientId: rsw
    resource:
      userInfoUri: ${host.authServer}/user
      preferTokenInfo: false

---
spring:
  profiles: rossjwt

# Internal Auth server using JWT tokens
security:
  oauth2:
    client:
      clientId: rsw
      clientSecret: rswsecret
    resource:
      jwt:
        keyValue: abracadabra

